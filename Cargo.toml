[package]
name = "discord-music-bot"
version = "1.0.0"
edition = "2021"
authors = ["Discord Music Bot Contributors"]
description = "Un bot Discord avancé pour lire de la musique YouTube avec interface interactive"
license = "MIT"
repository = "https://github.com/LHRICO78/discord-music-bot-rust"

[dependencies]
serenity = { version = "0.12", features = ["client", "gateway", "rustls_backend", "model", "voice"] }
songbird = "0.4"
tokio = { version = "1", features = ["full"] }
reqwest = { version = "0.12", features = ["json"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
dotenv = "0.15"
tracing = "0.1"
tracing-subscriber = "0.3"
youtube_dl = "0.9"
async-trait = "0.1"

# Profil de compilation optimisé pour réduire la consommation mémoire
# tout en gardant de bonnes performances
[profile.release]
opt-level = 2           # Niveau d'optimisation 2 au lieu de 3 (réduit la RAM)
lto = "thin"            # LTO léger au lieu de "fat" (beaucoup moins de RAM)
codegen-units = 16      # Compilation parallèle (réduit drastiquement la RAM par thread)
incremental = false     # Désactive la compilation incrémentale en release
strip = true            # Supprime les symboles de debug du binaire final

# Profil alternatif pour compilation ultra-rapide avec RAM minimale
# Utiliser avec: cargo build --profile fast
[profile.fast]
inherits = "release"
opt-level = 1           # Optimisation minimale
lto = false             # Pas de LTO du tout
codegen-units = 256     # Maximum de parallélisation

